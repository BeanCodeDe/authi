name: MainPipeline

on:
  pull_request:
    branches: [ main ]

jobs:
  releaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v3
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  unit_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3

      - name: Init project
        run: make init.token

      - name: Unit test
        run: go test ./internal/... -v

  journey_test_postgres:
    needs: [unit_test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3

      - name: Init project
        run: make init.token

      - name: Start environment
        run: docker compose --file ./deployments/docker-compose-postgres.yml up --build --quiet-pull -d
        env: 
          POSTGRES_PASSWORD:  ${{ secrets.POSTGRES_PASSWORD }}

      - name: Journey tests
        run: go test ./test -v
      
      - name: Shutdown environment
        run: docker compose --file ./deployments/docker-compose-postgres.yml down
  