name: MainPipeline

on:
  push:
    branches: [ main ]

jobs:
  release:
      name: release linux/386
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@master
      - name: compile and release
        uses: ngs/go-release.action@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOARCH: "386"
          GOOS: linux
          CMD_PATH: "cmd/authi/authi.go"
          EXTRA_FILES: "LICENSE"

  unit_test:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3

      - name: Init project
        run: make init.token

      - name: Unit test
        run: go test ./internal/... -v

  journey_test_postgres:
    needs: [unit_test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3

      - name: Init project
        run: make init.token

      - name: Start environment
        run: docker compose --file ./deployments/docker-compose-postgres.yml up --build --quiet-pull -d
        env: 
          POSTGRES_PASSWORD:  ${{ secrets.POSTGRES_PASSWORD }}

      - name: Journey tests
        run: go test ./test -v
      
      - name: Shutdown environment
        run: docker compose --file ./deployments/docker-compose-postgres.yml down
  
  CodeQL-Build:
    needs: [journey_test_postgres]
    runs-on: ubuntu-latest

    permissions:
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with: 
          languages: go

      - name: Auto build
        uses: github/codeql-action/autobuild@v2 

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  docker-build:
    needs: [release-linux-386,release-linux-amd64,release-linux-arm,release-linux-arm64,release-darwin-amd64,release-windows-386,release-windows-amd64]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Docker image
        run: docker build . -f ./build/Dockerfile --tag beancodede/authi:latest
      
      - name: Push the Docker image
        run: docker push beancodede/authi:latest