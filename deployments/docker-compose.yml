version: '3.7'
services:
  postgres:
    image: postgres:latest
    restart: always
    environment: 
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    ports:
      - $POSTGRES_PORT:5432
    volumes: 
      - $LOCAL_INIT_SQL_PATH:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5 
  authi:
    build: 
      context: ../
      dockerfile: build/Dockerfile
    image: "beancodede/authi:latest"
    container_name: authi
    restart: always
    environment: 
      - POSTGRES_USER=$AUTH_POSTGRES_USER
      - POSTGRES_DB=$AUTH_POSTGRES_DB
      - POSTGRES_PASSWORD=$AUTH_POSTGRES_PASSWORD
      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_PORT=$POSTGRES_PORT
      - LOG_LEVEL=$AUTH_LOG_LEVEL
      - PUBLIC_KEY_PATH=$PUBLIC_KEY_PATH
      - PRIVATE_KEY_PATH=$AUTH_PRIVATE_KEY_PATH
    ports:
      - 1203:1203
    volumes: 
      - public-key-volume:$PUBLIC_KEY_FOLDER_PATH
      - $LOCAL_PRIVATE_KEY_PATH:$PRIVAT_KEY_FOLDER_PATH
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres:postgres
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
volumes:
  public-key-volume:
    name: public-key-volume
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $LOCAL_PUBLIC_KEY_PATH